name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install Hadolint
        run: sudo apt-get install -y hadolint
      - name: Lint Dockerfile
        run: hadolint Dockerfile

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Run Sample Tests
        run: echo "No tests yet! Add unit tests here."

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx-app:latest

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init
      - name: Apply Terraform Changes
        run: |
          cd terraform
          terraform apply -auto-approve
      - name: Set Up EC2 with Docker and Ansible
        run: |
          ssh -i ${secrets.AWS_KEY_PAIR} ec2-user@${{ steps.deploy.outputs.instance_ip }} "bash -s" < ansible/playbook.yml
